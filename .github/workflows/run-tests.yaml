name: build

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ main ]

# ----------------------------------------------------------------------------
# Lint code and run tests.
# ----------------------------------------------------------------------------
jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: latest
      - name: Verify
        run: |
          exit 0

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Start Spanner Emulator
        run: |
          docker run -d --rm --name emulator -p 9010:9010 -p 9020:9020 gcr.io/cloud-spanner-emulator/emulator

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: Setup GCP Environment for Emulator
        run: |
          gcloud config configurations create emulator
          gcloud config set auth/disable_credentials true
          gcloud config set project my-project
          gcloud config set api_endpoint_overrides/spanner http://localhost:9020/
          gcloud spanner instances create my-instance --config=emulator-config --nodes=1 --description="foo" 

      - name: Start KinD Cluster
        run: |
          mkdir ~/bin
          curl -L --output ~/bin/kubectl https://dl.k8s.io/release/v1.29.5/bin/linux/amd64/kubectl
          curl -L --output ~/bin/kind https://kind.sigs.k8s.io/dl/v0.24.0/kind-linux-amd64
          chmod +x ~/bin/kubectl ~/bin/kind

          cd ./integration-test-cluster
          curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.23.2 TARGET_ARCH=x86_64 sh -
          ./start_cluster.sh
          cd ..

      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install Dependencies
        run: |
          cd backend
          pipenv install --system --deploy --dev

      - name: Linting and Static Analysis
        run: |
          cd backend
          pycodestyle .
          mypy .

      # Break if coverage drops below 100%.
      - name: Unit and Integration Tests
        run: |
          cd backend
          pytest --cov=dfh --cov-report=term-missing --cov-report=xml --cov-fail-under=100 --durations=10

      - name: Cleanup
        if: ${{ always() }}
        run: |
          docker stop emulator
          kind delete cluster

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: olitheolix/dfh

          fail_ci_if_error: true
          files: backend/coverage.xml
          flags: unittests
          name: codecov-umbrella
          verbose: false
